pipeline 
{

    agent{
        node 
        {
            label 'qeff_node'
        }
    }
    environment 
    {
        CONTAINER_NAME = "qeff_container"
    }
    stages 
    {
        stage('Check Changes') {
            steps {
                script {
                    def changedFiles = sh(script: "git diff --name-only HEAD~1 HEAD", returnStdout: true).trim().split('\n')
                    if ('pyproject.toml' in changedFiles) 
                    {
                         echo "Change in pyproject.tomldetected"
                    }
                    else
                    {
                        echo " There is no chnage in pyproject.toml"
                    }
                }
            }
        stage('Install QEfficient')
        {
            steps
            {
                sh '''
                    docker run --privileged -dit --name ${CONTAINER_NAME} -v ./:/data -v  /home/ubuntu/.cache/huggingface/hub:/root/.cache/huggingface/hub docker-registry.qualcomm.com/qraniumtest/qranium:master_latest
                    docker exec ${CONTAINER_NAME} bash -c "
                    cd /data
                    . /opt/qeff-env/bin/activate
                    pip install --upgrade pip setuptools &&
                    pip install .[test]"
                '''
            }
        }
        stage('Test')
        {
                steps
                {
                    //todo(ochougul): Increase when MQ tests are enabled 
		            timeout(time: 420, unit: 'MINUTES') 
                    {
                    sh '''
                    docker exec ${CONTAINER_NAME} bash -c "
                    cd /data &&
                    . /opt/qeff-env/bin/activate
                    export TOKENIZERS_PARALLELISM=false &&
                    pytest -W ignore -s -v tests -o junit_logging=all --junitxml=tests/tests_log.xml &&
                    deactivate &&
                    exit"
                    '''     
                }
            }
        }
    }
    post 
    {
         always 
         {
             sh '''
                docker rm -f ${CONTAINER_NAME}
                '''
            junit 'tests/tests_log.xml'
            echo 'Cleaning Workspace'
            deleteDir() 
         }
    }
       
}
