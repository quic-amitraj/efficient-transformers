pipeline 
{

    agent{
        node 
        {
            label 'qeff_node'
        }
    }
    environment 
    {
        CONTAINER_NAME = "qeff_container"
    }
    stages 
    {
        stage('Docker image build')
        {
            steps
            {
                sh '''
                    python3 /home/ubuntu/amitraj/docker_changec/qaic-docker/build_image.py --image_name ubuntu22_nightly --user_specification_file /home/ubuntu/amitraj/docker_changec/qaic-docker/sample_user_specs/user_image_spec_qaic.json --log_level 1 --apps_sdk /home/ubuntu/sdks/qaic-apps-1.17.0.8.zip --platform_sdk /home/ubuntu/sdks/qaic-platform-sdk-x86_64-deb-1.17.0.8.zip 
                '''
            }
        }
        stage('Install QEfficient')
        {
            steps
            {
                sh '''
                    docker run -d --name ${CONTAINER_NAME} -v .:/data ubuntu22_nightly sleep infinity
                    docker exec ${CONTAINER_NAME} bash -c "
                    cd /data &&
                    python3.8 -m venv preflight_qeff &&
                    . preflight_qeff/bin/activate && 
                    pip install --upgrade pip setuptools &&
                    pip install .[test] &&
                    rm -rf QEfficient"  
                '''
            }
        }
        stage('Test')
        {
                steps
                {
                    //todo(ochougul): Increase when MQ tests are enabled 
		            timeout(time: 420, unit: 'MINUTES') 
                    {
                    sh '''
                    docker exec ${CONTAINER_NAME} bash -c "
                    . preflight_qeff/bin/activate &&
                    export TOKENIZERS_PARALLELISM=false &&
                    pytest -W ignore -s -v tests -o junit_logging=all --junitxml=tests/tests_log.xml &&
                    deactivate &&
                    exit"
                    '''     
                }
            }
        }
    }
    post 
    {
         always 
         {
            sh '''
            docker rm -f ${CONTAINER_NAME}
            '''
            junit 'tests/tests_log.xml'
            echo 'Cleaning Workspace'
            deleteDir() 
         }
    }
       
}
